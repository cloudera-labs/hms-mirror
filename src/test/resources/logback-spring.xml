<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2024. Cloudera, Inc. All Rights Reserved
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  -->

<configuration>

    <property name="LOGS" value="/tmp/.hms-mirror/logs" />

    <appender name="Console"
              class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                %black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%C{1.}): %msg%n%throwable
            </Pattern>
        </layout>
    </appender>

    <appender name="RollingFile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS}/hms-mirror.log</file>
        <encoder
                class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%d %p %C{1.} [%t] %m%n</Pattern>
        </encoder>

        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily and when the file reaches 10 MegaBytes -->
            <fileNamePattern>${LOGS}/archived/${app.log.file}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- LOG everything at INFO level -->
    <root level="${logging.threshold}">
        <appender-ref ref="RollingFile" />
    </root>
    <root level="info">
        <appender-ref ref="Console" />
    </root>


    <!--

    log4j.logger.com.cloudera.utils.hadoop.hms.mirror=ERROR,console
log4j.logger.com.cloudera.utils.hadoop.hms.mirror.DBMirror=INFO,console
log4j.logger.com.cloudera.utils.hadoop.hms.mirror.Cluster=INFO,console
log4j.logger.com.cloudera.utils.hadoop.hms.stage.GetTableMetadata=DEBUG,console

log4j.logger.com.zaxxer.hikari=WARN
log4j.logger.com.jcabi=WARN
log4j.logger.org.apache.hadoop=WARN
log4j.logger.org.apache.hive.org.apache=WARN

-->
    <logger name="com.cloudera.utils.hadoop.hms.MirrorLegacy" level="error" additivity="false">
        <appender-ref ref="Console" />
    </logger>
    <logger name="com.cloudera.utils.hms.mirror.DBMirror" level="info" additivity="false">
        <appender-ref ref="Console" />
    </logger>
    <logger name="com.cloudera.utils.hms.mirror.Cluster" level="info" additivity="false">
        <appender-ref ref="Console" />
    </logger>
    <logger name="com.cloudera.utils.hadoop.hms.mirror.service.GetTableMetadataService" level="debug" additivity="false">
        <appender-ref ref="Console" />
    </logger>
    <logger name="com.cloudera.utils.hms.mirror.service.TransferService" level="warn" additivity="false">
        <appender-ref ref="Console" />
    </logger>
    <logger name="com.zaxxer.hikari" level="warn" additivity="false">
        <appender-ref ref="RollingFile" />
        <appender-ref ref="Console" />
    </logger>
    <logger name="com.jcabi" level="warn" additivity="false">
        <appender-ref ref="RollingFile" />
        <appender-ref ref="Console" />
    </logger>
    <logger name="org.apache.hadoop" level="warn" additivity="false">
        <appender-ref ref="RollingFile" />
        <appender-ref ref="Console" />
    </logger>
    <logger name="org.apache.hive.org.apache" level="warn" additivity="false">
        <appender-ref ref="RollingFile" />
        <appender-ref ref="Console" />
    </logger>
</configuration>
