#!/usr/bin/env sh
#
# Copyright (c) 2022. Cloudera, Inc. All Rights Reserved
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#

# Resolve Symlinks of exe
if [[ "$OSTYPE" == "darwin"* ]]; then
  # Mac OSX
  RESOLVED_EXE_PATH=`readlink $0`
else
  # ...
  RESOLVED_EXE_PATH=`readlink -f $0`
fi

# Find Dir of resolved script
APP_DIR=$(dirname $RESOLVED_EXE_PATH)
CURR_DIR=$(pwd)

echo "APP_DIR: $APP_DIR"

DO_NOT_FILE="${APP_DIR}/DO_NOT_RUN_APP_FROM_HERE.txt"
if [ -f $DO_NOT_FILE ]; then
  echo "Do NOT run application from 'install' directory.  If properly installed, the application will be in your PATH";
  exit 1
fi

if [[ "${APP_DIR}" == "${HOME}/.hms-mirror/bin" ]]; then
  echo "Running from User Local Instance"
else
  echo "Running Host instance"
fi

if [[ ! -d ${HOME}/.hms-mirror/aux_libs ]]; then
  mkdir -p ${HOME}/.hms-mirror/aux_libs
fi

if [ ! -z ${JAVA_HOME} ]; then
  JAVA="${JAVA_HOME}/bin/java"
else
  JAVA=java
fi

PRG_ARGS=
CMD_CP=

AUX_LIBS_DIR=${HMS_MIRROR_AUX_LIBS:-${HOME}/.hms-mirror/aux_libs}

SHOW_CP=
CMD_DIRECTIVE=
CMD_ARGS=
VERBOSE=

# The new default is to run using the `hadoop classpath`, which assumes that the host has Hadoop installed and
#  we'll use the classpath from the host to include the current hadoop libraries.
STANDALONE="false"

APP_JAVA_OPTS=${JAVA_OPTS:-"-Xms2048m -Xmx4096m -XX:+UseG1GC"}
LOGGING_THRESHOLD=${LOGGING_THRESHOLD:-"DEBUG"}
APP_LOG_FILE=${APP_LOG_FILE:-"hms-mirror"}

APP_OUTPUT_DIR=${HOME}/.hms-mirror/reports
DIR_OVERRIDE=

if [[ ! -d ${AUX_LIBS_DIR} ]]; then
  mkdir -p ${AUX_LIBS_DIR}
fi

while [[ $# -gt 0 ]]; do
  case "$1" in
  -D*)
    APP_JAVA_OPTS="${APP_JAVA_OPTS} ${1}"
    shift
    ;;
  -CP)
    shift
    CMD_CP=${CMD_CP}:$1
    shift
    ;;
  --hadoop-classpath)
    shift
    echo "--hadoop-classpath is `deprecated`.  The hadoop dependencies are pulled from the host by default using `hadoop classpath`"
    echo "If you want to use your own hadoop dependencies, use the --standalone option and place those libraries in the"
    echo " ${HOME}/.hms-mirror/hadoop_libs directory."
#    HADOOP_CLASSPATH="true"
    ;;
  --standalone)
    shift
    echo "Running in Standalone Mode.  Collect and place the appropriate hadoop libraries in ${HOME}/.hms-mirror/hadoop_libs directory."
    echo " The application will use the libraries in that directory instead of the host hadoop libraries (which may not be available)."
    STANDALONE="true"
    ;;
  --aux-libs)
    shift
    export AUX_LIBS_DIR=$1
    shift
    ;;
  --show-cp)
    shift
    SHOW_CP="true"
    ;;
  -o|--output-dir)
    shift
    PRG_ARGS="${PRG_ARGS} -o \"$1\""
    APP_OUTPUT_DIR=$1
    DIR_OVERRIDE="x"
    shift
    ;;
  *)
    PRG_ARGS="${PRG_ARGS} \"$1\""
    shift
    ;;
  esac
done

if [[ "${DIR_OVERRIDE}x" == "x" ]]; then
  # Add Date to output dir path
  APP_OUTPUT_PATH=${APP_OUTPUT_DIR}/$(date +%y-%m-%d_%H-%M-%S)
else
  APP_OUTPUT_PATH=${APP_OUTPUT_DIR}
fi

export APP_OUTPUT_PATH
APP_JAVA_OPTS="${APP_JAVA_OPTS} -Dapp.path.dir=\"$APP_OUTPUT_PATH\" -Dlogging.threshold=${LOGGING_THRESHOLD} -Dapp.log.file=\"$APP_LOG_FILE\""

if [[ ! -d ${AUX_LIBS_DIR} ]]; then
  mkdir -p ${AUX_LIBS_DIR}
fi

# Add aux_libs to classpath
CMD_CP=${CMD_CP}:${AUX_LIBS_DIR}/*

if [[ "${STANDALONE}x" == "truex" ]]; then
  echo "Picking up local Hadoop Classpath Libs."
  CMD_CP=${CMD_CP}:${HOME}/.hms-mirror/hadoop_libs/*
else
  CMD_CP=${CMD_CP}:$(hadoop classpath)
fi

CLI_CMD=""

if [[ "${SHOW_CP}x" != "x" ]]; then
  echo "Classpath: ${CMD_CP}"
fi

if [[ "${APP_JAVA_OPTS}x" != "x" ]]; then
  echo "Application JAVA_OPTS=${APP_JAVA_OPTS}" 1>&2
fi

if [[ "${PRG_ARGS}x" != "x" ]]; then
  echo "PRG_ARGS=${PRG_ARGS}" 1>&2
fi

echo "Using Java Version: "
$(${JAVA} -version)
echo ""

CLI_CMD="${JAVA} -cp ${CMD_CP} ${APP_JAVA_OPTS} -Dloader.main=com.cloudera.utils.hms.Mirror -jar ${APP_DIR}/../lib/* ${PRG_ARGS}"

echo "CLI_CMD: ${CLI_CMD}"

eval "${CLI_CMD}"
